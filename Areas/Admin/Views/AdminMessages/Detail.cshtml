@model Nossa_TV.ViewModels.AdminMessageDetailViewModel
@{
    ViewData["Title"] = "Detalhes da Mensagem - Admin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid my-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Detalhes da Mensagem</h2>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i>Voltar à Lista
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-8">
            <!-- Mensagem Original -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">@Model.Subject</h5>
                        <span class="badge @GetStatusBadgeClass(Model.Status)">@GetStatusText(Model.Status)</span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="mb-1"><strong>De:</strong> @Model.SenderName</p>
                            <p class="mb-1"><strong>Email:</strong> <a href="mailto:@Model.SenderEmail">@Model.SenderEmail</a></p>
                        </div>
                        <div class="col-md-6">
                            <p class="mb-1"><strong>Enviada em:</strong> @Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</p>
                            @if (Model.ReadAt.HasValue)
                            {
                                <p class="mb-1"><strong>Lida em:</strong> @Model.ReadAt.Value.ToString("dd/MM/yyyy HH:mm")</p>
                            }
                            @if (Model.RepliedAt.HasValue)
                            {
                                <p class="mb-1"><strong>Respondida em:</strong> @Model.RepliedAt.Value.ToString("dd/MM/yyyy HH:mm")</p>
                            }
                        </div>
                    </div>
                    <hr />
                    <div class="message-content">
                        <p class="mb-0">@Model.MessageContent</p>
                    </div>
                </div>
            </div>

            <!-- Respostas Anteriores -->
            @if (Model.Replies.Count > 0)
            {
                <h4 class="mb-3"><i class="bi bi-chat-left-text me-2"></i>Histórico de Respostas</h4>
                @foreach (var reply in Model.Replies)
                {
                    <div class="card mb-3 border-start border-success border-4">
                        <div class="card-body">
                            <div class="d-flex justify-content-between mb-2">
                                <small class="text-muted">
                                    <i class="bi bi-person-fill me-1"></i>Admin: @reply.AdminUserId
                                </small>
                                <small class="text-muted">
                                    <i class="bi bi-calendar me-1"></i>@reply.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                </small>
                            </div>
                            <p class="mb-0">@reply.ReplyContent</p>
                        </div>
                    </div>
                }
            }

            <!-- Formulário de Resposta -->
            <div class="card border-primary">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="bi bi-reply me-2"></i>Responder Mensagem</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Reply" asp-route-id="@Model.Id" method="post">
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <label for="replyContent" class="form-label">Sua Resposta *</label>
                            <textarea name="replyContent" id="replyContent" class="form-control" rows="6" 
                                      placeholder="Digite sua resposta aqui..." required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-send me-2"></i>Enviar Resposta
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Sidebar com Ações -->
        <div class="col-lg-4">
            <div class="card sticky-top" style="top: 20px;">
                <div class="card-header">
                    <h5 class="mb-0">Ações</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if (!Model.IsRead)
                        {
                            <form asp-action="MarkAsRead" asp-route-id="@Model.Id" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-info w-100">
                                    <i class="bi bi-check2-circle me-2"></i>Marcar como Lida
                                </button>
                            </form>
                        }

                        <form asp-action="Archive" asp-route-id="@Model.Id" method="post">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-warning w-100">
                                <i class="bi bi-archive me-2"></i>Arquivar Mensagem
                            </button>
                        </form>

                        <form asp-action="Delete" asp-route-id="@Model.Id" method="post" 
                              onsubmit="return confirm('Tem certeza que deseja excluir esta mensagem e todas as respostas?');">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger w-100">
                                <i class="bi bi-trash me-2"></i>Excluir Mensagem
                            </button>
                        </form>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.SenderEmail))
                {
                    <div class="card-footer">
                        <h6>Informações do Remetente</h6>
                        <p class="mb-1 small"><strong>Nome:</strong> @Model.SenderName</p>
                        <p class="mb-1 small"><strong>Email:</strong> @Model.SenderEmail</p>
                        <a asp-controller="AdminLeads" asp-action="Index" asp-route-search="@Model.SenderEmail" 
                           class="btn btn-sm btn-outline-primary w-100 mt-2">
                            <i class="bi bi-person-lines-fill me-1"></i>Ver Lead
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "New" => "bg-secondary",
            "Read" => "bg-info",
            "Replied" => "bg-success",
            "Archived" => "bg-warning text-dark",
            _ => "bg-secondary"
        };
    }

    string GetStatusText(string status)
    {
        return status switch
        {
            "New" => "Nova",
            "Read" => "Lida",
            "Replied" => "Respondida",
            "Archived" => "Arquivada",
            _ => status
        };
    }
}
